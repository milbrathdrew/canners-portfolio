name: Optimize and Deploy Portfolio

on:
  push:
    branches: [ main ]
    paths:
      - 'data/portfolio.json'
      - 'images/portfolio/**'
  workflow_dispatch:

jobs:
  optimize-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Sharp CLI
      run: npm install -g sharp-cli

    - name: Optimize images
      run: |
        # Create optimized image directories
        mkdir -p images/portfolio/optimized/small
        mkdir -p images/portfolio/optimized/medium
        mkdir -p images/portfolio/optimized/large
        mkdir -p images/portfolio/optimized/full

        # Optimize images in different sizes if portfolio images exist
        if [ -d "images/portfolio/original" ] && [ "$(ls -A images/portfolio/original 2>/dev/null)" ]; then
          echo "üñºÔ∏è Optimizing images..."

          # Small thumbnails (400px)
          for file in images/portfolio/original/*.{jpg,jpeg,png,JPG,JPEG,PNG}; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              name="${filename%.*}"
              echo "Creating small versions of $filename"

              # JPEG optimization
              sharp -i "$file" -o "images/portfolio/optimized/small/${name}.jpg" resize 400 400 --fit cover --format jpeg --quality 85

              # WebP version
              sharp -i "$file" -o "images/portfolio/optimized/small/${name}.webp" resize 400 400 --fit cover --format webp --quality 80
            fi
          done

          # Medium size (800px)
          for file in images/portfolio/original/*.{jpg,jpeg,png,JPG,JPEG,PNG}; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              name="${filename%.*}"
              echo "Creating medium versions of $filename"

              # JPEG optimization
              sharp -i "$file" -o "images/portfolio/optimized/medium/${name}.jpg" resize 800 800 --fit cover --format jpeg --quality 85

              # WebP version
              sharp -i "$file" -o "images/portfolio/optimized/medium/${name}.webp" resize 800 800 --fit cover --format webp --quality 80
            fi
          done

          # Large size (1200px) - still cropped for grid consistency
          for file in images/portfolio/original/*.{jpg,jpeg,png,JPG,JPEG,PNG}; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              name="${filename%.*}"
              echo "Creating large versions of $filename"

              # JPEG optimization
              sharp -i "$file" -o "images/portfolio/optimized/large/${name}.jpg" resize 1200 1200 --fit cover --format jpeg --quality 90

              # WebP version
              sharp -i "$file" -o "images/portfolio/optimized/large/${name}.webp" resize 1200 1200 --fit cover --format webp --quality 85
            fi
          done

          # Full resolution (preserve aspect ratio for lightbox)
          for file in images/portfolio/original/*.{jpg,jpeg,png,JPG,JPEG,PNG}; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              name="${filename%.*}"
              echo "Creating full resolution versions of $filename"

              # JPEG optimization - max 2000px on longest side, preserve aspect ratio
              sharp -i "$file" -o "images/portfolio/optimized/full/${name}.jpg" resize 2000 2000 --fit inside --format jpeg --quality 92

              # WebP version
              sharp -i "$file" -o "images/portfolio/optimized/full/${name}.webp" resize 2000 2000 --fit inside --format webp --quality 88
            fi
          done

          echo "‚úÖ Image optimization complete"
        else
          echo "No images to optimize"
        fi

    - name: Commit optimized images
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add images/portfolio/optimized/ || true
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üñºÔ∏è Auto-optimize portfolio images" || echo "Commit failed, but continuing"
          git push || echo "Push failed, but continuing"
        fi